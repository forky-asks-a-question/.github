name: Build and Review PR

on:
  workflow_call:
    inputs:
      action-name:
        description: The name of the action
        required: false
        type: string
        default: ${{ github.repository }}
      default-branch:
        description: Default branch of which contains the tag
        required: false
        type: string
        default: main
      readme-location:
        description: The location of the readme file
        required: false
        type: string
        default: 'README.md'
      files-with-code:
        description: The files that contain code for the action
        required: false
        type: string
        default: 'action.yml,package.json,package-lock.json'
      dirs-with-code:
        description: The directories that contain code for the action
        required: false
        type: string
        default: 'src,dist'
      build-command:
        description: The npm script to run to build the action
        required: false
        type: string
        default: '' # For actions that need to be compiled, this will usually be 'npm run build'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      HAS_SOURCE_CODE_CHANGES: ${{ steps.source-code.outputs.HAS_CHANGES }}
      NEXT_VERSION: ${{ steps.version.outputs.NEXT_VERSION }}

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
        
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.default-branch }}
          fetch-depth: 0

      - name: Check for code changes to the action source code
        id: source-code
        uses: im-open/did-custom-action-code-change@v1
        with:
          files-with-code: ${{ inputs.files-with-code}}   # Default is 'action.yml,package.json,package-lock.json'
          folders-with-code: ${{ inputs.dirs-with-code }} # Default is 'src,dist'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Action Source Code Changed - ${{ steps.source-code.outputs.HAS_CHANGES }}
        run: |
          if [ "${{ steps.source-code.outputs.HAS_CHANGES }}" == "true" ]; then
            echo "This PR changes the action's source code.  Proceed with subsequent steps."
          else
            echo "This PR does not change the action's source code.  Skipping subsequent steps."
          fi

      - name: Get the next version for the repo
        if: steps.source-code.outputs.HAS_CHANGES == 'true'
        id: version
        uses: im-open/git-version-lite@v2

      - name: The next action version will be - ${{ steps.version.outputs.NEXT_VERSION || 'N/A'}}
        if: steps.source-code.outputs.HAS_CHANGES == 'true'
        run: echo "The next action version will be - ${{ steps.version.outputs.NEXT_VERSION }}"

  build-and-review-pr:
    runs-on: ubuntu-latest
    needs: [setup]

    env:
      NEXT_VERSION: ${{ needs.setup.outputs.NEXT_VERSION }}
      HAS_CODE_CHANGES: ${{ needs.setup.outputs.HAS_SOURCE_CODE_CHANGES }}
      IS_FORK: ${{ github.event.pull_request.head.repo.fork }}
      PR_SOURCE: ${{ github.event.pull_request.head.repo.fork == true && 'fork' || 'branch' }}
      NEEDS_COMMIT: false
      HAS_BUILD_STEP: false
      FAILURE_MESSAGE: ''

    steps:
      - name: Action Source Code Changed - ${{ env.HAS_CODE_CHANGES }}
        run: |
          if [ "${{env.HAS_CODE_CHANGES}}" == "true" ]; then
            echo "This PR changes the action's source code.  Proceed with subsequent steps and jobs."
          else
            echo "This PR does not change the action's source code.  Skipping subsequent steps and jobs."
          fi

      # The remaining steps in this build will use the env.HAS_CODE_CHANGES condition.  Setting it on each
      # step rather than the job will ensure this job always runs and that we can use it for status checks.

      - name: PR Source - ${{ env.PR_SOURCE }}
        if: env.HAS_CODE_CHANGES == 'true'
        run: echo "PRs can come from a branch or a fork.  This PR is from a ${{ env.PR_SOURCE }}."

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build and Recompile action (if applicable)
        if: env.HAS_CODE_CHANGES == 'true' && inputs.build-command != ''
        run: ${{ inputs.build-command }} # Typical value is '' or 'npm run build'

      - name: Update readme with next version - ${{ env.NEXT_VERSION }}
        if: env.HAS_CODE_CHANGES == 'true'
        uses: im-open/update-action-version-in-file@v1
        with:
          file-to-update: ${{ inputs.readme-location }} # Default: 'README.md'
          action-name: ${{ inputs.action-name }}        # Default: 'github.repository'
          updated-version: ${{ env.NEXT_VERSION }}

      - name: Check for unstaged changes
        if: env.HAS_CODE_CHANGES == 'true'
        run: |
          if [[ "$(git status --porcelain)" != "" ]]; then
            echo "There are  PR Contribution changes to commit"
            echo "NEEDS_COMMIT=true" >> "$GITHUB_ENV"
          else
            echo "There were no  PR Contribution changes to commit"
            echo "NEEDS_COMMIT=false" >> "$GITHUB_ENV"
          fi

      - name: If there are outstanding changes - Construct failing workflow summary & comment
        if: env.HAS_CODE_CHANGES == 'true' &&  env.NEEDS_COMMIT == 'true'
        id: summary
        uses: actions/github-script@v6
        with:
          script: |
            
            const isFork = ${{env.IS_FORK}};
            const hasBuildStep =  '${{ inputs.build-command }}' && '${{ inputs.build-command }}'.trim().length > 0;
            
            const repoLink =  'https://github.com/${{github.repository}}';
            const ref = isFork ? '${{ github.sha }}' : '${{ github.event.pull_request.head.ref }}';

            const contributionLink = `${repoLink}#contributing`;
            const readmeLink = `${repoLink}/blob/${ref}/README.md#usage-examples`;

            // Construct the workflow summary/PR comment
            let instructions = `Before this PR can be merged, the following item(s) should be addressed to comply with the action's [Contribution Guidelines](${contributionLink}).
            - Please update [README.md](${readmeLink}) usage examples with the next version.  Each instance of this action in the examples should be updated to: 
              \`uses: ${{ inputs.action-name }}@${{ env.NEXT_VERSION }}\``;
            
            if (hasBuildStep){
              instructions += `
            - Please ensure the action has been recompiled by running the following command from the root of the repository: 
              \`${{ inputs.build-command }}\``;
            }
            console.log(instructions)

            // Comment on PR for branches.  For forks, the GH_TOKEN only has 'read' 
            // permission on all scopes so a comment cannot be made on the PR.
            if (!isFork) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: instructions
              })
            }

            // Create the workflow summary
            core.summary
              .addRaw(instructions)
              .write()

            // Fail the build
            core.setFailed(instructions);



      # - name: If there are outstanding changes - Fail the workflow
      #   if: always() && env.HAS_CODE_CHANGES == 'true' && env.NEEDS_COMMIT == 'true'
      #   run: |
      #     echo "::error::Before this PR can be merged, the following item(s) should be addressed to comply with the contribution guidelines:"
      #     echo "  - Please update every example in the README.md file where this action is used.  Each instance should be updated to:"
      #     echo "    uses: ${{ inputs.action-name }}@${{ env.NEXT_VERSION }}
          
      #     if [ "${{ env.HAS_BUILD_STEP }}" == "true" ]; then
      #       echo " - Please ensure the action has been recompiled by running the following command from the root of the repository:"
      #       echo "    '${{ inputs.build-command }}'"
      #     fi
          
      #     exit 1
