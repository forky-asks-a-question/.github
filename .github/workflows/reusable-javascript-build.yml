name: Build and Check for Changes
on:
  workflow_call:
    inputs:
      default-branch:
        description: Default branch of which contains the tag
        required: false
        type: string
        default: main
      node-version:
        description: version of node to build the action with
        required: false
        type: string
        default: 16.x
      files-with-code:
        description: The files that contain code for the action
        required: false
        type: string
        default: 'action.yml,package.json,package-lock.json'
      folders-with-code:
        description: The folders that contain code for the action
        required: false
        type: string
        default: 'src,dist'
      build-command:
        description: The npm script to run to build the action
        required: false
        type: string
        default: 'npm run build'
      readme-location:
        description: The location of the readme file
        required: false
        type: string
        default: './README.md'
      action-name:
        description: The name of the action
        required: false
        type: string
        default: ${{ github.repository }}

    outputs:
      NEXT_VERSION:
        description: The next version calculated by git-version-lite.
        value: ${{ jobs.calculate-next-version.outputs.NEXT_VERSION }}

jobs:
  calculate-next-version:
    runs-on: ubuntu-latest
    outputs:
      NEXT_VERSION: ${{ steps.version.outputs.NEXT_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.default-branch }}
          fetch-depth: 0

      - name: Get the next version for the repo
        id: version
        uses: im-open/git-version-lite@v2

      - run: echo "The next action version will be - ${{ steps.version.outputs.NEXT_VERSION }}"

  check-for-changes:
    runs-on: ubuntu-latest
    needs: [calculate-next-version]

    env:
      NEXT_VERSION: ${{ needs.calculate-next-version.outputs.NEXT_VERSION }}
      IS_FORK: ${{ github.event.pull_request.head.repo.fork }}
      NEEDS_COMMIT: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }} # Default is 16.x

      - name: Check for code changes to the action
        id: action-code
        uses: im-open/did-custom-action-code-change@v1.0.1
        with:
          files-with-code: ${{ inputs.files-with-code}} # Default is 'action.yml,package.json,package-lock.json'
          folders-with-code: ${{ inputs.folders-with-code }} # Default is 'src,dist'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: The PR contains code changes - ${{ steps.action-code.outputs.HAS_CHANGES}}
        run: echo "The PR contains code changes - ${{ steps.action-code.outputs.HAS_CHANGES}}"
      - name: The PR is from a forked repo - ${{ env.IS_FORK }}
        run: echo "The PR is from a forked repo - ${{ env.IS_FORK }}"
      - name: The next action version will be - ${{ env.NEXT_VERSION }}
        run: echo "The next action version will be - ${{ env.NEXT_VERSION }}"

      - name: If code changed - Recompile and Format action
        if: steps.action-code.outputs.HAS_CHANGES == 'true'
        run: ${{ inputs.build-command }} # Default value is 'npm run build'

      - name: If code changed - Update readme with next version
        if: steps.action-code.outputs.HAS_CHANGES == 'true'
        uses: im-open/update-action-version-in-file@v1.0.0
        with:
          file-to-update: ${{ inputs.readme-location }} # Default: './README.md'
          action-name: ${{ inputs.action-name }} # Default: '${{ github.repository }}'
          updated-version: ${{ env.NEXT_VERSION }}

      - name: If code changed - Check for unstaged readme/recompile changes
        if: steps.action-code.outputs.HAS_CHANGES == 'true'
        run: |
          if [[ "$(git status --porcelain)" != "" ]]; then
            echo "There are changes to commit"
            echo "NEEDS_COMMIT=true" >> "$GITHUB_ENV"
          else
            echo "There were no changes to commit"
            echo "NEEDS_COMMIT=false" >> "$GITHUB_ENV"
          fi

      #----------------------------------------
      # Steps for Non-Forked Repos
      #----------------------------------------
      - name: If code changed in non-forked repo - Commit unstaged changes
        if: env.NEEDS_COMMIT == 'true' && env.IS_FORK == 'false'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update readme with latest version and/or recompile the action."
          git push origin HEAD:${{ github.head_ref }}
      - name: If code changed in non-forked repo - Generate status check
        if: env.NEEDS_COMMIT == 'true' && env.IS_FORK == 'false'
        run: |
          echo "hey"

      #----------------------------------------
      # Steps for Forked Repos
      #----------------------------------------
      - name: If code changed in forked repo - Construct failing workflow summary
        if: env.NEEDS_COMMIT == 'true' && env.IS_FORK == 'true'
        id: summary
        uses: actions/github-script@v6
        with:
          script: |
            const summary = `This PR needs a few updates before it can be merged.  Please ensure the following changes are made:
            - Recompile the action by running \`${{ inputs.build-command }}\` from the root of the repository
            - Update the version for all instances of this action in the ${{ inputs.readme-location }}.  It should be changed to: \`uses: im-open/${{ inputs.action-name }}@${{ env.NEXT_VERSION }}\``;
            core.error(summary);
            core.setOutput('summary', summary);

      - name: If code changed in forked repo - Fail the workflow
        if: always() && env.NEEDS_COMMIT == 'true' && env.IS_FORK == 'true'
        run: |
          echo '${{ steps.summary.outputs.summary }}' >> $GITHUB_STEP_SUMMARY
          exit 1
